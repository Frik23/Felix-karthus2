--[[
Felix Teemo
]]--

function Teemo()
    -- Print to the chat area
    PrintChat("Best Teemo script ever Loading")
end
 
function OnLoad()
	SayHello()
end


if not myHero then
  myHero = GetMyHero()
end
if myHero.charName ~= "Teemo" then return end

-- We will store the target selector on this variable
local ts
 
function OnLoad()
	-- Menu
	Config = scriptConfig("MENU TITLE", "Felix Teemo")
	Config:addParam("drawCircle", "Draw Circle", SCRIPT_PARAM_ONOFF, true)
	Config:addParam("combo", "Combo mode", SCRIPT_PARAM_ONKEYDOWN, false, string.byte(" "))
 
 
	ts = TargetSelector(TARGET_LOW_HP_PRIORITY,500)
end
 
function OnTick()
	ts:update()
	
	--Enemy near?
	if (ts.target ~= nil) then
 
		if (Config.combo) then
			-- Can we cast Q ?
			if (myHero:CanUseSpell(_Q) == READY) then
				-- Cast spell on enemy
				CastSpell(_Q, ts.target)
			end
 
			-- Can we cast W ?
			if (myHero:CanUseSpell(_W) == READY) then
				-- Cast spell on enemy
				CastSpell(_W)
			end
			
		end
		
	end
end
 
-- Drawing graphics
function OnDraw()
	--Draw circles only if activated on menu
	if (Config.drawCircle) then
		DrawCircle(myHero.x, myHero.y, myHero.z, 580, 0x111111)
	end
	
		end
	end
end

--copy paste zum detecten von orbwalkern von Fantastik--
function Orbwalk()
 if _G.Reborn_Loaded or _G.Reborn_Initialised or _G.AutoCarry ~= nil then
    table.insert(OrbWalkers, "SAC")
  end
  if _G.MMA_IsLoaded then
    table.insert(OrbWalkers, "MMA")
  end
  if _G._Pewalk then
    table.insert(OrbWalkers, "Pewalk")
  end
  if FileExist(LIB_PATH .. "/Nebelwolfi's Orb Walker.lua") then
    table.insert(OrbWalkers, "NOW")
  end
  if FileExist(LIB_PATH .. "/Big Fat Orbwalker.lua") then
    table.insert(OrbWalkers, "Big Fat Walk")
  end
  if FileExist(LIB_PATH .. "/SOW.lua") then
    table.insert(OrbWalkers, "SOW")
  end
  if FileExist(LIB_PATH .. "/SxOrbWalk.lua") then
    table.insert(OrbWalkers, "SxOrbWalk")
  end
  if #OrbWalkers > 0 then
    Config:addSubMenu("Orbwalkers", "Orbwalkers")
    Config:addSubMenu("Keys", "Keys")
    Config.Orbwalkers:addParam("Orbwalker", "OrbWalker", SCRIPT_PARAM_LIST, 1, OrbWalkers)
    Config.Keys:addParam("info", "Detecting keys from: "..OrbWalkers[Config.Orbwalkers.Orbwalker], SCRIPT_PARAM_INFO, "")
    local OrbAlr = false
    Config.Orbwalkers:setCallback("Orbwalker", function(value)
      if OrbAlr then return end
      OrbAlr = true
      Menu.Orbwalkers:addParam("info", "Press F9 2x to load your selected Orbwalker.", SCRIPT_PARAM_INFO, "")
      prntChat("Press F9 2x to load your selected Orbwalker")
    end)
  end
end
 
 
function orbwalkload()
    if OrbWalkers[Config.Orbwalkers.Orbwalker] == "SAC" then
    LoadedOrb = "Sac"
    TIMETOSACLOAD = false
    DelayAction(function() TIMETOSACLOAD = true end,15)
  elseif OrbWalkers[Config.Orbwalkers.Orbwalker] == "MMA" then
    LoadedOrb = "Mma"
  elseif OrbWalkers[Config.Orbwalkers.Orbwalker] == "Pewalk" then
    LoadedOrb = "Pewalk"
  elseif OrbWalkers[Config.Orbwalkers.Orbwalker] == "NOW" then
    LoadedOrb = "Now"
    require "Nebelwolfi's Orb Walker"
    _G.NOWi = NebelwolfisOrbWalkerClass()
    Config.Orbwalkers:addSubMenu("NOW", "NOW")
    _G.NebelwolfisOrbWalkerClass(Config.Orbwalkers.NOW)
  elseif OrbWalkers[Config.Orbwalkers.Orbwalker] == "Big Fat Walk" then
    LoadedOrb = "Big"
    require "Big Fat Orbwalker"
  elseif OrbWalkers[Config.Orbwalkers.Orbwalker] == "SOW" then
    LoadedOrb = "Sow"
    require "SOW"
    Config.Orbwalkers:addSubMenu("SOW", "SOW")
    _G.SOWi = SOW(_G.VP)
    SOW:LoadToMenu(Config.Orbwalkers.SOW)
  elseif OrbWalkers[Config.Orbwalkers.Orbwalker] == "SxOrbWalk" then
    LoadedOrb = "SxOrbWalk"
    require "SxOrbWalk"
    Config.Orbwalkers:addSubMenu("SxOrbWalk", "SxOrbWalk")
    SxOrb:LoadToMenu(Config.Orbwalkers.SxOrbWalk)
  end
end
 
 
function getMode()
 if LoadedOrb == "Sac" and TIMETOSACLOAD then
    if _G.AutoCarry.Keys.AutoCarry then return "Combo" end
    if _G.AutoCarry.Keys.MixedMode then return "Harass" end
    if _G.AutoCarry.Keys.LaneClear then return "Laneclear" end
    if _G.AutoCarry.Keys.LastHit then return "Lasthit" end
  elseif LoadedOrb == "Mma" then
    if _G.MMA_IsOrbwalking() then return "Combo" end
    if _G.MMA_IsDualCarrying() then return "Harass" end
    if _G.MMA_IsLaneClearing() then return "Laneclear" end
    if _G.MMA_IsLastHitting() then return "Lasthit" end
  elseif LoadedOrb == "Pewalk" then
    if _G._Pewalk.GetActiveMode().Carry then return "Combo" end
    if _G._Pewalk.GetActiveMode().Mixed then return "Harass" end
    if _G._Pewalk.GetActiveMode().LaneClear then return "Laneclear" end
    if _G._Pewalk.GetActiveMode().Farm then return "Lasthit" end
  elseif LoadedOrb == "Now" then
    if _G.NOWi.Config.k.Combo then return "Combo" end
    if _G.NOWi.Config.k.Harass then return "Harass" end
    if _G.NOWi.Config.k.LaneClear then return "Laneclear" end
    if _G.NOWi.Config.k.LastHit then return "Lasthit" end
  elseif LoadedOrb == "Big" then
    if _G["BigFatOrb_Mode"] == "Combo" then return "Combo" end
    if _G["BigFatOrb_Mode"] == "Harass" then return "Harass" end
    if _G["BigFatOrb_Mode"] == "LaneClear" then return "Laneclear" end
    if _G["BigFatOrb_Mode"] == "LastHit" then return "Lasthit" end
  elseif LoadedOrb == "Sow" then
    if _G.SOWi.Menu.Mode0 then return "Combo" end
    if _G.SOWi.Menu.Mode1 then return "Harass" end
    if _G.SOWi.Menu.Mode2 then return "Laneclear" end
    if _G.SOWi.Menu.Mode3 then return "Lasthit" end
  elseif LoadedOrb == "SxOrbWalk" then
    if _G.SxOrb.isFight then return "Combo" end
    if _G.SxOrb.isHarass then return "Harass" end
    if _G.SxOrb.isLaneClear then return "Laneclear" end
    if _G.SxOrb.isLastHit then return "Lasthit" end
  end
end
